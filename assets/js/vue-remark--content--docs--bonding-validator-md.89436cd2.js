(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{QlhZ:function(e,t,a){"use strict";a.r(t);var o=a("KHd+"),n=a("UQSp"),r=a("Kw5r");function s(e){return(s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}r.a.config.optionMergeStrategies;var i={VueRemarkRoot:n.a},l=function(e){var t=e.options.components=e.options.components||{},a=e.options.computed=e.options.computed||{};Object.keys(i).forEach((function(e){"object"===s(i[e])&&"function"==typeof i[e].render?t[e]=i[e]:a[e]=function(){return i[e]}}))},p=r.a.config.optionMergeStrategies,c="__vueRemarkFrontMatter",d={excerpt:null,title:"Running a Standalone Validator"};var u=function(e){e.options[c]&&(e.options[c]=d),r.a.util.defineReactive(e.options,c,d),e.options.computed=p.computed({$frontmatter:function(){return e.options[c]}},e.options.computed)},h=Object(o.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("VueRemarkRoot",[a("h1",{attrs:{id:"running-a-standalone-validator"}},[a("a",{attrs:{href:"#running-a-standalone-validator","aria-hidden":"true"}},[e._v("#")]),e._v("Running a Standalone Validator")]),a("p",[e._v("The information on this page is for people who will help launch and validate on the RChain public mainnet.")]),a("h2",{attrs:{id:"requirements"}},[a("a",{attrs:{href:"#requirements","aria-hidden":"true"}},[e._v("#")]),e._v("Requirements")]),a("p",[e._v("CPU: 4-8 Cores")]),a("p",[e._v("Memory: 16-32 GB")]),a("h2",{attrs:{id:"setup"}},[a("a",{attrs:{href:"#setup","aria-hidden":"true"}},[e._v("#")]),e._v("Setup")]),a("p",[e._v("This is the setup for non-docker rnode, but rnode for docker (windows) works equivalent:")]),a("p",[e._v("Remove cache (do this always, when you switch the network)")]),a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",{pre:!0,attrs:{class:"language-bash"}},[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("rm")]),e._v(" -Rf ~/.rnode/")])]),a("p",[e._v("Create Validator (-s means standalone)")]),a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",{pre:!0,attrs:{class:"language-bash"}},[e._v("./rnode run -s --map-size "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("1099511627776")])])]),a("p",[e._v("This creates a new DAG with a new genesis block having 5 validators in bonds list, as you can observe if you look into RNode output. You always need at least 5 validators, otherwise the genesis ceremony wont start. You can find private and public keys for these validators in ~/.rnode/genesis/. The name of *.sk file is a public key and private key is residing inside.")]),a("p",[e._v("Now you can kill (Ctrl+C) your node and restart it in validator mode using one of private keys.")]),a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",{pre:!0,attrs:{class:"language-bash"}},[e._v("./rnode run -s --map-size "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("1099511627776")]),e._v(" --validator-private-key "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("cat")]),e._v(" ~/.rnode/genesis/*.sk "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("tail")]),e._v(" -1"),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v(")")])])])]),a("h2",{attrs:{id:"test"}},[a("a",{attrs:{href:"#test","aria-hidden":"true"}},[e._v("#")]),e._v("Test")]),a("p",[e._v("As the private key used to start a node matches the public key of a bonded validator in existing genesis block, your node is allowed to add new blocks on top of it. Deploy some code to your node.")]),a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",{pre:!0,attrs:{class:"language-bash"}},[e._v("./rnode deploy --private-key "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("deployer_private_key"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" --phlo-limit "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("value"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" --phlo-price "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("value"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("file.rho"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")])])]),a("p",[e._v("Do not confuse "),a("code",{pre:!0},[e._v("deployer_private_key")]),e._v(" with validator key used to start a node. This should be a different key which will pay for deploy execution. For testing purposes you can set "),a("code",{pre:!0},[e._v("--phlo-limit")]),e._v(" 1000000 and "),a("code",{pre:!0},[e._v("--phlo-price 1")]),e._v(".")]),a("p",[e._v("You should see response with a deployID\nDeployId is: 3044022100a65b2c5d890ed53174fcd9f53f150756c9ff4b37e0a4137f025d53ec418c1894021f18c42eccf307b27e6159606e92ca4e96f4b9688b6b95ee05944c8794b0dd76")]),a("p",[e._v("And call your node to propose a block.")]),a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",{pre:!0,attrs:{class:"language-bash"}},[e._v("./rnode propose")])]),a("p",[e._v("You should see a hash of block created.\nResponse: Success! Block 8b70f0c681... created and added.")]),a("h2",{attrs:{id:"monitoring-the-node"}},[a("a",{attrs:{href:"#monitoring-the-node","aria-hidden":"true"}},[e._v("#")]),e._v("Monitoring the Node")]),a("p",[e._v("RNode features integration with Prometheus. "),a("a",{attrs:{href:"https://github.com/rchain/rchain/blob/master/docker/node/README.md",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("These instructions")]),e._v(" describe a method for getting started with RNode metrics collection and display using Prometheus via Docker-compose.")]),a("h2",{attrs:{id:"visualizing-the-blockchain"}},[a("a",{attrs:{href:"#visualizing-the-blockchain","aria-hidden":"true"}},[e._v("#")]),e._v("Visualizing the blockchain")]),a("p",[e._v("To support debugging we have a process to collect information from the node and use it in graphviz to create a visualization of the DAG. Below are instructions for two methods for using this tool.")]),a("h2",{attrs:{id:"visualizing-the-blockchain-when-there-are-6000-lines"}},[a("a",{attrs:{href:"#visualizing-the-blockchain-when-there-are-6000-lines","aria-hidden":"true"}},[e._v("#")]),e._v("Visualizing the blockchain when there are >6,000 lines")]),a("p",[e._v("Once an active network has been running for a few hours, your call to vdag will likely generate >6,000 lines of output. In this scenario, you will need to have installed the Graphviz software and use it to create a .png file. Please see "),a("a",{attrs:{href:"https://www.graphviz.org/download/",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("https://www.graphviz.org/download/")]),e._v(" for information about installing and running Graphviz.")]),a("p",[e._v("Once installed use the following command to generate a .png file based on vdag output.")]),a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",{pre:!0,attrs:{class:"language-bash"}},[e._v("rnode vdag "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" dot -Tpng "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("vdag.png")])]),a("h2",{attrs:{id:"creating-a-private-blockchain"}},[a("a",{attrs:{href:"#creating-a-private-blockchain","aria-hidden":"true"}},[e._v("#")]),e._v("Creating a private blockchain")]),a("p",[e._v("You can create your own blockchain network.")]),a("p",[e._v("Prerequisites for a private blockchain")]),a("ul",[a("li",[e._v("1 bootstrap node")]),a("li",[e._v("2 other node instances running on a network where they can communicate with each other (peers of each other).")]),a("li",[e._v("Keys for the node instances (these will be required for signing and creating the bond.txt file)")]),a("li",[e._v("A bond.txt file accessible by all node instances. You can either supply it, or use the system generated bonds file.")]),a("li",[e._v("A Rholang file to deploy across the network.")])]),a("p",[e._v("Steps to create a private blockchain")]),a("ul",[a("li",[e._v("Start the bootstrap node. This is the 1 node operating in standalone mode.")]),a("li",[e._v("Include the address of the bootstrap node in your run command for the peer nodes.")])])])}),[],!1,null,null,null);"function"==typeof l&&l(h),"function"==typeof u&&u(h);t.default=h.exports},UQSp:function(e,t,a){"use strict";t.a={name:"VueRemarkRoot",render:function(e){return e("div",null,this.$slots.default)}}}}]);