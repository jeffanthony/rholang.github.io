(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{ITM0:function(e,t,a){"use strict";a.r(t);var s=a("KHd+"),r=a("UQSp"),o=a("Kw5r");function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}o.a.config.optionMergeStrategies;var l={VueRemarkRoot:r.a},c=function(e){var t=e.options.components=e.options.components||{},a=e.options.computed=e.options.computed||{};Object.keys(l).forEach((function(e){"object"===n(l[e])&&"function"==typeof l[e].render?t[e]=l[e]:a[e]=function(){return l[e]}}))},i=o.a.config.optionMergeStrategies,d="__vueRemarkFrontMatter",p={excerpt:null,title:"Commands for RNode"};var u=function(e){e.options[d]&&(e.options[d]=p),o.a.util.defineReactive(e.options,d,p),e.options.computed=i.computed({$frontmatter:function(){return e.options[d]}},e.options.computed)},v=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("VueRemarkRoot",[a("h1",{attrs:{id:"commands-for-rnode"}},[a("a",{attrs:{href:"#commands-for-rnode","aria-hidden":"true"}},[e._v("#")]),e._v("Commands for RNode")]),a("p",[e._v("Commands for calling rnode")]),a("h2",{attrs:{id:"available-shell-commands"}},[a("a",{attrs:{href:"#available-shell-commands","aria-hidden":"true"}},[e._v("#")]),e._v("Available shell commands")]),a("p",[e._v("With RNode running, use "),a("code",{pre:!0},[e._v("--help")]),e._v(" to see available commands and subcommands.")]),a("h2",{attrs:{id:"calling-the-api"}},[a("a",{attrs:{href:"#calling-the-api","aria-hidden":"true"}},[e._v("#")]),e._v("Calling the API")]),a("p",[e._v("The RNode API is a server side API. To access the local RNode server once you have RNode running, open a new window and invoke the RNode api with:")]),a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",{pre:!0,attrs:{class:"language-bash"}},[e._v("rnode "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("API call"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")])])]),a("h3",{attrs:{id:"calling-the-api-from-a-remote-server"}},[a("a",{attrs:{href:"#calling-the-api-from-a-remote-server","aria-hidden":"true"}},[e._v("#")]),e._v("Calling the API from a remote server")]),a("p",[e._v("You can call the API of a remote RNode server by specifying the host server and host server port.")]),a("div",{staticStyle:{"overflow-x":"auto"}},[a("table",{staticClass:"wrapped confluenceTable tablesorter tablesorter-default",attrs:{resolved:"",role:"grid"}},[a("colgroup",[a("col"),a("col"),a("col"),a("col")]),a("thead",[a("tr",{staticClass:"tablesorter-headerRow",attrs:{role:"row"}},[a("th",{staticClass:"confluenceTh tablesorter-header sortableHeader tablesorter-headerUnSorted",staticStyle:{"user-select":"none"},attrs:{"data-column":"0",tabindex:"0",scope:"col",role:"columnheader","aria-disabled":"false",unselectable:"on","aria-sort":"none","aria-label":"Option: No sort applied, activate to apply an ascending sort"}},[a("div",{staticClass:"tablesorter-header-inner"},[e._v("Option")])]),a("th",{staticClass:"confluenceTh tablesorter-header sortableHeader tablesorter-headerUnSorted",staticStyle:{"user-select":"none"},attrs:{"data-column":"1",tabindex:"0",scope:"col",role:"columnheader","aria-disabled":"false",unselectable:"on","aria-sort":"none","aria-label":"Description: No sort applied, activate to apply an ascending sort"}},[a("div",{staticClass:"tablesorter-header-inner"},[e._v("Description")])]),a("th",{staticClass:"confluenceTh tablesorter-header sortableHeader tablesorter-headerUnSorted",staticStyle:{"user-select":"none"},attrs:{"data-column":"2",tabindex:"0",scope:"col",role:"columnheader","aria-disabled":"false",unselectable:"on","aria-sort":"none","aria-label":"Syntax: No sort applied, activate to apply an ascending sort"}},[a("div",{staticClass:"tablesorter-header-inner"},[e._v("Syntax")])]),a("th",{staticClass:"confluenceTh tablesorter-header sortableHeader tablesorter-headerUnSorted",staticStyle:{"user-select":"none"},attrs:{"data-column":"3",tabindex:"0",scope:"col",role:"columnheader","aria-disabled":"false",unselectable:"on","aria-sort":"none","aria-label":"Argument Format: No sort applied, activate to apply an ascending sort"}},[a("div",{staticClass:"tablesorter-header-inner"},[e._v("Argument Format")])])])]),a("tbody",{attrs:{"aria-live":"polite","aria-relevant":"all"}},[a("tr",{attrs:{role:"row"}},[a("td",{staticClass:"confluenceTd"},[e._v("Host Server")]),a("td",{staticClass:"confluenceTd"},[e._v("The IP address of the server that will receive the call")]),a("td",{staticClass:"confluenceTd"},[e._v("--grpc-host")]),a("td",{staticClass:"confluenceTd"},[e._v("100.10.25.75")])]),a("tr",{attrs:{role:"row"}},[a("td",{staticClass:"confluenceTd"},[e._v("Host Server port")]),a("td",{staticClass:"confluenceTd"},[e._v("The port for the gRPC API on the server listening for calls")]),a("td",{staticClass:"confluenceTd"},[e._v("--grpc-port")]),a("td",{staticClass:"confluenceTd"},[e._v("40401")])])])])]),a("p",[e._v("This is an example of an API call to a remote server")]),a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",{pre:!0,attrs:{class:"language-bash"}},[e._v("./bin/rnode --grpc-host IP.Address.of.server --grpc-port "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("40401")]),e._v(" repl")])]),a("h2",{attrs:{id:"find-your-node-address-version-and-peer-count"}},[a("a",{attrs:{href:"#find-your-node-address-version-and-peer-count","aria-hidden":"true"}},[e._v("#")]),e._v("Find your node address, version, and peer count")]),a("p",[e._v("You can ask RNode to provide its status to report the RNode address, version, and peer count.")]),a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",{pre:!0,attrs:{class:"language-bash"}},[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("curl")]),e._v(" -s http://localhost:40403/status")])]),a("p",[e._v("Report status in Docker")]),a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",{pre:!0,attrs:{class:"language-bash"}},[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" docker "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("exec")]),e._v(" -ti "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("containername"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("curl")]),e._v(" -s http://localhost:40403/status")])]),a("p",[e._v("Example of a status request response")]),a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",{pre:!0,attrs:{class:"language-bash"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"address"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"rnode://4fa269b79e781af2c079713772cfc5dbd7dc1569@52.119.8.64?protocol=40400&discovery=40404"')]),e._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"version"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"RChain Node 0.9.4.git8a4c9939 (8a4c99394c3a22831c2eadef7cdde7dec35238d7)"')]),e._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"peers"')]),e._v(":7,"),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"nodes"')]),e._v(":44"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")])])]),a("p",[e._v("RNode offers two types of counts of peers. peers are the number of nodes you are connected to via the Kademlia protocol and the ones that are able to pass messages such as blocks. nodes are the number of nodes found as part of node discovery.")]),a("h2",{attrs:{id:"get-a-count-of-blocks-in-the-dag"}},[a("a",{attrs:{href:"#get-a-count-of-blocks-in-the-dag","aria-hidden":"true"}},[e._v("#")]),e._v("Get a count of blocks in the DAG")]),a("p",[e._v("Use this command to show the number of blocks in the DAG according to your node.")]),a("p",[e._v("Report status in Docker")]),a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",{pre:!0,attrs:{class:"language-bash"}},[e._v("rnode show-blocks")])]),a("p",[e._v("Get a count of blocks in Docker")]),a("p",[e._v("Report status in Docker")]),a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",{pre:!0,attrs:{class:"language-bash"}},[e._v("docker run -it --rm --network-id rnode-net --name rnode -v "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("$HOME")]),e._v("/var/rholang:/var/ rchain/rnode:latest --grpc-host rnode2 show-blocks")])]),a("h2",{attrs:{id:"generate-a-publicprivate-key-set"}},[a("a",{attrs:{href:"#generate-a-publicprivate-key-set","aria-hidden":"true"}},[e._v("#")]),e._v("Generate a public/private key set")]),a("p",[e._v("You can use the RNode software to generate either a secp256k1 public/private key set to use when deploying Rholang or in other scenarios where providing keys is a requirement. With the release of RNode v0.9.7 the platform uses the secp256k1 algorithm.")]),a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",{pre:!0,attrs:{class:"language-bash"}},[e._v("rnode keygen --algorithm secp256k1 --private-key-path "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("arg"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")])])])])}),[],!1,null,null,null);"function"==typeof c&&c(v),"function"==typeof u&&u(v);t.default=v.exports},UQSp:function(e,t,a){"use strict";t.a={name:"VueRemarkRoot",render:function(e){return e("div",null,this.$slots.default)}}}}]);