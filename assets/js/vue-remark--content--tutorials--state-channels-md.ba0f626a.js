(window.webpackJsonp=window.webpackJsonp||[]).push([[66],{QwbB:function(t,a,s){"use strict";s.r(a);var e=s("KHd+"),n=s("UQSp"),r=s("Kw5r");function o(t){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}r.a.config.optionMergeStrategies;var p={VueRemarkRoot:n.a},c=function(t){var a=t.options.components=t.options.components||{},s=t.options.computed=t.options.computed||{};Object.keys(p).forEach((function(t){"object"===o(p[t])&&"function"==typeof p[t].render?a[t]=p[t]:s[t]=function(){return p[t]}}))},v=r.a.config.optionMergeStrategies,l="__vueRemarkFrontMatter",i={excerpt:null,title:"State Channels "};var u=function(t){t.options[l]&&(t.options[l]=i),r.a.util.defineReactive(t.options,l,i),t.options.computed=v.computed({$frontmatter:function(){return t.options[l]}},t.options.computed)},k=Object(e.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("VueRemarkRoot",[e("h1",{attrs:{id:"state-channels"}},[e("a",{attrs:{href:"#state-channels","aria-hidden":"true"}},[t._v("#")]),t._v("State Channels")]),e("p",[t._v("By now you're good at sending data to the tuplespace, and receiving data from the tuplespace. But whenever you're computing, you occasionally need to set data aside to be used later. Almost every programming language has a concept of variables.")]),e("h2",{attrs:{id:"holding-on-to-data"}},[e("a",{attrs:{href:"#holding-on-to-data","aria-hidden":"true"}},[t._v("#")]),t._v("Holding on to data")]),e("p",[e("g-image",{attrs:{src:s("eVWk"),alt:"Variables are so 2015. It&#x27;s all about state channels now."}})],1),e("p",[t._v('Another way in which rholang is unique is that it doesn\'t have traditional variables. Instead, we can just use the tuplespace to store our data. Whenever you want to set something aside for later, just send it on some channel and receive it back later. Channels that are used in this way are called "state channels", and often have '),e("code",{pre:!0},[t._v("Ch")]),t._v(" at the end of their name")]),e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",{pre:!0,attrs:{class:"language-javascript"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("stdout")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("rho:io:stdout")]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" boxCh "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// To save data we just put it in the box")]),t._v("\n  boxCh"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Then to get data back out")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" boxCh"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Do whatever you want with the data here.")]),t._v("\n    stdout"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])])]),e("p",[t._v("What data gets sent to "),e("code",{pre:!0},[t._v("@somePublicChannel")]),t._v("?")]),e("ul",[e("li",{staticClass:"task-list-item"},[e("input",{attrs:{type:"checkbox",disabled:""}}),t._v(" 0")]),e("li",{staticClass:"task-list-item"},[e("input",{attrs:{type:"checkbox",disabled:""}}),t._v(" box")]),e("li",{staticClass:"task-list-item"},[e("input",{attrs:{type:"checkbox",checked:"",disabled:""}}),t._v(" 42")]),e("li",{staticClass:"task-list-item"},[e("input",{attrs:{type:"checkbox",disabled:""}}),t._v(" It is empty")])]),e("p",[t._v("What data is left in the "),e("code",{pre:!0},[t._v("boxCh")]),t._v(" state channel?")]),e("ul",[e("li",{staticClass:"task-list-item"},[e("input",{attrs:{type:"checkbox",disabled:""}}),t._v(" 0")]),e("li",{staticClass:"task-list-item"},[e("input",{attrs:{type:"checkbox",disabled:""}}),t._v(' @"somePublicBox"')]),e("li",{staticClass:"task-list-item"},[e("input",{attrs:{type:"checkbox",disabled:""}}),t._v(" 42")]),e("li",{staticClass:"task-list-item"},[e("input",{attrs:{type:"checkbox",checked:"",disabled:""}}),t._v(" It is empty")])]),e("h2",{attrs:{id:"persisting-data"}},[e("a",{attrs:{href:"#persisting-data","aria-hidden":"true"}},[t._v("#")]),t._v("Persisting Data")]),e("p",[t._v("If we were to check the box again, we would not get a result. Because once we receive the message, it gets consumed from the tuplespace. We briefly discussed the solution back in our lesson on persistent sends and peeks.")]),e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",{pre:!0,attrs:{class:"language-javascript"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("boxCh")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// To save data we just put it in the box")]),t._v("\n  boxCh"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// To check the value without consuming it")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" boxCh"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// We send a copy back to the box")]),t._v("\n    boxCh"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The do whatever with it")]),t._v("\n    @"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"somePublicChannel"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])])]),e("p",[t._v("What data gets sent to "),e("code",{pre:!0},[t._v("@somePublicChannel")]),t._v("?")]),e("ul",[e("li",{staticClass:"task-list-item"},[e("input",{attrs:{type:"checkbox",disabled:""}}),t._v(" 0")]),e("li",{staticClass:"task-list-item"},[e("input",{attrs:{type:"checkbox",disabled:""}}),t._v(" box")]),e("li",{staticClass:"task-list-item"},[e("input",{attrs:{type:"checkbox",checked:"",disabled:""}}),t._v(" 42")]),e("li",{staticClass:"task-list-item"},[e("input",{attrs:{type:"checkbox",disabled:""}}),t._v(" It is empty")])]),e("p",[t._v("What data is left in the "),e("code",{pre:!0},[t._v("boxCh")]),t._v(" state channel?")]),e("ul",[e("li",{staticClass:"task-list-item"},[e("input",{attrs:{type:"checkbox",disabled:""}}),t._v(" 0")]),e("li",{staticClass:"task-list-item"},[e("input",{attrs:{type:"checkbox",disabled:""}}),t._v(' @"somePublicBox"')]),e("li",{staticClass:"task-list-item"},[e("input",{attrs:{type:"checkbox",checked:"",disabled:""}}),t._v(" 42")]),e("li",{staticClass:"task-list-item"},[e("input",{attrs:{type:"checkbox",disabled:""}}),t._v(" It is empty")])]),e("h2",{attrs:{id:"patience-game-revisited"}},[e("a",{attrs:{href:"#patience-game-revisited","aria-hidden":"true"}},[t._v("#")]),t._v("Patience Game Revisited")]),e("p",[t._v("A few lessons back we discussed the patience game, where each player hopes to be the last one to send a message to the contract. We had some problems back then because we couldn't guarantee that a result of the game would ever be output.")]),e("p",[t._v("Take a minute to remind yourself of the problem we had. With a state channel, we can solve this problem properly.")]),e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",{pre:!0,attrs:{class:"language-javascript"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("P1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("P2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("stdout")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("rho:io:stdout")]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// active gets its own scope so players can't change its value.")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("active")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    active"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_ "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" active"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" _ "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("P1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" _ "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("P2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        stdout"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"P2 Wins"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_ "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" active"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" _ "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("P2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_ "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("P1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        stdout"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"P1 Wins"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("P1")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token maybe-class-name"}},[t._v("Nil")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("P2")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token maybe-class-name"}},[t._v("Nil")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])])]),e("p",[t._v("How does the above code avoid the problem of each block getting called once?")]),e("ul",[e("li",{staticClass:"task-list-item"},[e("input",{attrs:{type:"checkbox",disabled:""}}),t._v(" By forcing player one to use the top block")]),e("li",{staticClass:"task-list-item"},[e("input",{attrs:{type:"checkbox",checked:"",disabled:""}}),t._v(" Because after the first call "),e("code",{pre:!0},[t._v("activeCh")]),t._v(" is empty")]),e("li",{staticClass:"task-list-item"},[e("input",{attrs:{type:"checkbox",disabled:""}}),t._v(" Because state channel make things sequential")])]),e("h2",{attrs:{id:"objects-and-methods"}},[e("a",{attrs:{href:"#objects-and-methods","aria-hidden":"true"}},[t._v("#")]),t._v("Objects and Methods")]),e("p",[e("g-image",{attrs:{src:s("q+lY"),alt:"This click-counter can be incremented and reset"}})],1),e("p",[t._v('In "Object Oriented Programming" languages such as java, we can model real-world objects by encapsulating some data along with methods that use or change the data. The same thing is possible in rholang.')]),e("p",[t._v("In this example, we'll create an object that represents a basic click counter. The ingredients are:")]),e("ul",[e("li",[t._v("State Channels: currentCount")]),e("li",[t._v("Methods: increase, reset")])]),e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",{pre:!0,attrs:{class:"language-javascript"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("currentCount")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" increase"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" reset"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" check"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("stdout")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("rho:io:stdout")]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  \n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Starting the counter at 0")]),t._v("\n  currentCount"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Method to increase counter (returns the old value)")]),t._v("\n  contract "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("increase")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ack"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("old "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" currentCount"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      currentCount"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("old "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n      ack"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("old"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Method to reset the counter (returns the old value)")]),t._v("\n  contract "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("reset")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ack"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("old "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" currentCount"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      currentCount"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n      ack"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("old"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Increase the value three times")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ack")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    increase"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("ack"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_ "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" ack"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      increase"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("ack"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_ "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" ack"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        increase"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("ack"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_ "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" ack"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          increase"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("ack"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n\n          "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// And check it's value afterwards")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_ "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" ack"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" count "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" currentCount"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            stdout"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("count"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])])]),e("h3",{attrs:{id:"exercises"}},[e("a",{attrs:{href:"#exercises","aria-hidden":"true"}},[t._v("#")]),t._v("Exercises")]),e("p",[t._v("It is inconvenient to manually replace the counter value each time I check it. Instead we should have a method for that.")]),e("h3",{attrs:{id:"exercise"}},[e("a",{attrs:{href:"#exercise","aria-hidden":"true"}},[t._v("#")]),t._v("Exercise")]),e("p",[t._v("Now that it's easier and safer to check the counter, let's write some better tests that actually check all the methods.")]),e("h2",{attrs:{id:"factories"}},[e("a",{attrs:{href:"#factories","aria-hidden":"true"}},[t._v("#")]),t._v("Factories")]),e("p",[t._v("If you've programmed in other languages like java you may be familiar with constructors. If you haven't programmed in in java, that's great, because Rholang uses factories to make new objects rather than constructors.")]),e("p",[t._v("The counter is a useful construct in rholang, and you'll likely find that you use it in your projects. The problem is that many projects may want to use counters, and having just one is insufficient. So the solution is to make a factory contract that makes counters. When the factory contract is called, it sends back a brand new counter.")]),e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",{pre:!0,attrs:{class:"language-javascript"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("counterFactory")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("stdout")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("rho:io:stdout")]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  contract "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("counterFactory")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("increase"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" reset"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("currentCount")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Start the counter at zero")]),t._v("\n      currentCount"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n\n      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Method to increase counter (returns the old value)")]),t._v("\n      contract "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("increase")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ack"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("old "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" currentCount"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          currentCount"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("old "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n          ack"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("old"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n\n      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Method to reset the counter (returns the old value)")]),t._v("\n      contract "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("reset")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ack"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("old "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" currentCount"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          currentCount"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n          ack"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("old"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ack")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" myIncrease"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" myReset "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Demo using the counter here")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token maybe-class-name"}},[t._v("Nil")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])])]),e("p",[t._v("How would a user call the factory to get a new counter?")]),e("ul",[e("li",{staticClass:"task-list-item"},[e("input",{attrs:{type:"checkbox",disabled:""}}),e("code",{pre:!0},[t._v("counterFactory!(*ack)")])]),e("li",{staticClass:"task-list-item"},[e("input",{attrs:{type:"checkbox",disabled:""}}),e("code",{pre:!0},[t._v("counterFactory!(0, *ack)")])]),e("li",{staticClass:"task-list-item"},[e("input",{attrs:{type:"checkbox",disabled:""}}),e("code",{pre:!0},[t._v('@"counterFactory"()')])]),e("li",{staticClass:"task-list-item"},[e("input",{attrs:{type:"checkbox",checked:"",disabled:""}}),e("code",{pre:!0},[t._v("counterFactory!(myIncrease, myReset)")])])]),e("p",[t._v("How would a user reset their counter after creating as indicated above.")]),e("ul",[e("li",{staticClass:"task-list-item"},[e("input",{attrs:{type:"checkbox",disabled:""}}),e("code",{pre:!0},[t._v("myIncrease!(*ack)")])]),e("li",{staticClass:"task-list-item"},[e("input",{attrs:{type:"checkbox",checked:"",disabled:""}}),e("code",{pre:!0},[t._v("myReset!(*ack)")])]),e("li",{staticClass:"task-list-item"},[e("input",{attrs:{type:"checkbox",disabled:""}}),e("code",{pre:!0},[t._v("counterFactory!(myReset, *ack)")])]),e("li",{staticClass:"task-list-item"},[e("input",{attrs:{type:"checkbox",disabled:""}}),e("code",{pre:!0},[t._v("counterFactory!(myReset)")])])]),e("h2",{attrs:{id:"method-dispatching"}},[e("a",{attrs:{href:"#method-dispatching","aria-hidden":"true"}},[t._v("#")]),t._v("Method Dispatching")]),e("p",[t._v('There are two primary techniques for making methods available. The first option I call "separation of powers" because each method listens on its own dedicated channel.')]),e("p",[t._v('Another option is the "control panel" technique where there is a single unforgeable name called the control panel and all the methods are built on it.')]),e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",{pre:!0,attrs:{class:"language-javascript"}},[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Separation of Powers")]),t._v("\ncontract "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("factory")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("method1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" method2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  contract "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("method1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ack"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token spread operator"}},[t._v("...")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  contract "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("method2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ack"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token spread operator"}},[t._v("...")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Control Panel")]),t._v("\ncontract "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("factory")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cPanel"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  contract @"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("cPanel"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"method1"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ack"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token spread operator"}},[t._v("...")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  contract @"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("cPanel"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"method2"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ack"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token spread operator"}},[t._v("...")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])])]),e("p",[t._v("Which technique did the counter example use to dispatch methods?")]),e("ul",[e("li",{staticClass:"task-list-item"},[e("input",{attrs:{type:"checkbox",checked:"",disabled:""}}),t._v(" Separation of Powers")]),e("li",{staticClass:"task-list-item"},[e("input",{attrs:{type:"checkbox",disabled:""}}),t._v(" Control Panel")])]),e("h3",{attrs:{id:"exercise-1"}},[e("a",{attrs:{href:"#exercise-1","aria-hidden":"true"}},[t._v("#")]),t._v("Exercise")]),e("p",[t._v("Convert the counter example to use the other method dispatching technique. You should convert the tests too.")])])}),[],!1,null,null,null);"function"==typeof c&&c(k),"function"==typeof u&&u(k);a.default=k.exports},UQSp:function(t,a,s){"use strict";a.a={name:"VueRemarkRoot",render:function(t){return t("div",null,this.$slots.default)}}},eVWk:function(t,a){t.exports={type:"image",mimeType:"image/png",src:"/assets/static/state-channels-variables.0a0a24b.0707b7c0928f4014c1ba8f4877d3ab4d.png",size:{width:1348,height:915},sizes:"(max-width: 1348px) 100vw, 1348px",srcset:["/assets/static/state-channels-variables.82a2fbd.0707b7c0928f4014c1ba8f4877d3ab4d.png 480w","/assets/static/state-channels-variables.cbab2cf.0707b7c0928f4014c1ba8f4877d3ab4d.png 1024w","/assets/static/state-channels-variables.0a0a24b.0707b7c0928f4014c1ba8f4877d3ab4d.png 1348w"],dataUri:"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 1348 915' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-b5e1c6d91fded9eed35ee7f6576a3819'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-b5e1c6d91fded9eed35ee7f6576a3819)' width='1348' height='915' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAArCAYAAADIWo5HAAAACXBIWXMAAA7DAAAOwwHHb6hkAAAQhUlEQVRo3tVaCVRUV5q%2brygQil1ARAXZEWTfkZ2CYt%2bhgCoW2V0CSAsqKqARFHGPu4bEqE1cokk0LonTJqczySQ56Zzu9MTRnrQ93ZO2j52TzGTSc06mY3zz3cdf%2bKBBIVvb95zvvFdVb7n/f///%2b5dbjE1/KIASoAKYBcwBfGS/ewCedJ4LCPR7iuwaYZJnC1OcwwxgLTAPaKT3JQELgDIgjeZpGPy6vUC8TIZpD8PkZgN76MU5gBugA%2bqAWKAQ8APK6YUJQBhQD6iBYHoOn3AinfPrUuncCGgDKoEImbL1gCldwwXcArgDq4AGuraLFGCY73iFGrPvYZiRUM5AJk3%2bGvAusB4oBfKByzSxfydlDAFPAQOABR1fBXqBV4Amen4B8A7wLD3jbTry%2b63oGi8gmZTZQfeGkzUOAjbsRxoZQDfQAnSSUqwBRxKaW4QGsKQJ%2bgPZgAlQTMIG07GATNuRrqkgRfuRtSySvXchsA5YDASS20WSRbSQlfJroum76bjXtIYDCf1txsPMkbtKOimAu1kNKUYuiPEk3MDIwrjfO8ms5nsbSmAJad2M/DiTfpsPuNK5LQkQQqY5XnDu0/tkfi/ICMpsnLCmMuEmIuUfdfBJrSbz5ia4BggiwTmR9ZPZO9ORKyEPmDvOWhxplX/Ief7gw44UsRTYRUzcDJwldtaRkK3AYVp1RhzwDz0MZjeLwl4asTFf1QBa9RJia64keyCLiCqQPv9dzHfKw8jIaMSOhBFLSkhIYC0tLayhoYEVFxcLw8PDgqOjo5KUMBVhiigf%2bNHMc3rxLCNDOs6cOVPo6uoShoaGhJMnTwqiKDKObdu2TdXvBFKGPBERKJwpH2u79vf3f5hQXBGK4eGfmhcVFXqVarXxoWHh3PTzYS0Wjxs5TXvMnj17JMYplQlpaWnhBw8e9D53etjn7bffdn3llVe816xZk9rY2FhcVlbWkpGZuSMqMvJNb0%2bPI25u7sXGxsZS6DMzMxOmKPDjp4QtW7ZIk4qLiyusq6vdFBsbuz0mUb0vLj7%2bMs5/kapOeS85VfP7%2buzY%2b9srIsXNtRliUID/R1XV1dU%2bXp5SkhIQECBMkDPw4U0RIVnGGdNVguIHjf179%2b6VJpSToQkKDI24VqaJEc82hIn9dZlieUWFqNfpxMrKSgl6vf6v/BgSGvp6d3d32sKFC6X4HhMTI0ySLfI8YDfwHPC0LAo8PpZQW1srHX19vB1T1KmHK8pKxaPLs/76VGP6vd7anHvlZWXflI3gPnCPKyAiIuKt02fOREBwKd8uKiqSP9KEiqJCCo%2bDVAztoTJ5OispUO7/GhVGLRNdZGFhIXh5eQne3t7MyclJ%2bs7d3Z0hWj36DfPnz5eO1tZWVuCAI3kFheLupsx7q6rzRG1Z%2bf3ycklwCVqt9h6sQITgN3p7exPz8vK4iUvhUbaq/IEiJUg8Q3ySEiaOqmkowIRc6SRwn575q/H3Ojg4jLmJRy64s4JHNYVCwSwtLR/RYZgxmmqrMjMyjnEFrKvNv9delf9Nibb8fgXcgEOn093nq19fXy/Gx8eL%2bfn5JRhhE%2bTvjlQirwR6SBHV5A41lP8/NBWhI%2b87/Bz4JSmvXVZDSMNcpTK80yMu1M851NX%2bb6T18fExMjExESZS1vhVsIiIjNxdWFAg1lZX3i/TVUr%2bD%2bE/g6B/yc3N5YJ/ERISchtW8/LWrVvD29rasmUFj5LNnKOQ%2bf9MyhS7qHyOpaaF9SN4wECgp2nVOXZSpXiIskz5daG%2bvr77FobFnAuMiD2SV6zVFhbkRwiCwlGubG4Nj9K4U1h4%2bEp1ctL95pzor3D8FAq5GODv379o0aLu1NTUtU1NTXk7duyIunTpkv/hw4cz161bl0D1vPn4h/GJyRodQVTr85rAd4qszwU%2bT9xhGJ74Ve7YAvy/LRSk3J4bLlYl%2bP53iJ/Xh5HR0S/CTfeBq3rc3NyaDK07c3PzMS/SjuugzFu%2bbFlsVVVVp6uHZ2tcbOwKCN2OTHE9fHwtrKArKSnpucjIyOMqleo0cuUPodXLmrTUrZZWVj/jDRKFrZM8ozJlCmWEZPaCohaoxHxDSQEzpqgE7mJ/AM54ipegXcGFyu2RFpWp6cqgoKBz3l5eN042x4svr8wQG3RFYlKKWoyKivwav32JOd8EQUrFGD6PMQPeyRmm5gFDUsPVo0/XaKCHpU8GBga%2bgTzgiouLyydg1D/b2tp%2bAW3/xd7e/i586o9kmt/YOcy6GxYUcNNUZX6HeUe/w9KbO1hQagx78nXDexZQcyNR1qWZKgkyMv9LpLR0YaaJhTBSeP0EC/FmclLSBV//wBcTwvzfyYiPvKPOyEbI1ouoXcTExEQRid5VToxSpPP9W%2bPjStjOQxbSWq4IN6x43fLly9eDSa8jrHzo4eHxH35%2bfjfnzJnzOeL%2br0EqH7u5u5/FJN5gZpafswT9B8bZy44rbRwOsnl%2bq1ly9WZWsraLJeh2sOjC7cwzvI3N8%2b1kzn5LmdJk0djekOnYZX/gpwoZoTYzc6MNyjj7eJNa1wKlxvGCYr6K9xKbUbA9D5wxViq/ik9KOQFcCAkOuhAWFnYR5v%2bZq6vrFzB7KfQ6OztPSr7x1IgcJpZWgeRsoIQK5Ai7wfaDSPoGsrKydkM5jeCBiMaly0dcx2Z2sqDf1McO/GaAHfq4nS05oGVOXlUsJCOKZbdsYTs/6GMnP2tkp/93PTv1ZQPTrq9iroFSR9jS1Vea0AwTE3br1q2JZ6Yy2gChl6ieDisyGwhowrFDdTTs/IyV3i8JtsY8PJ5UmZvvxOLcDg0Jvu67YMGvYe53w8PDn0fEOjRv3rwzcpeZqGuskHEXb0dzu/2AGpO2UIQf2L8csT%2bE%2bMKJqrtAanaGSsw%2bx%2bs4Wzy4iz3zSQ87/Nt2lrdiDyvsPMf2fHiQvSQOsbNfvYBjB7spprJ1F6vZ16LioQWTUuD9g3WKMJseW7G0zOJ6QuaMVT5Pmj0VfMr8dNSwccGcIaw8d41qzPESFunmggULvkLiI9rZ2f0J0eoQlPASXFUrsbuTk6FKfVQIlsIXT1tv4AUXyT2uUhv7n/DdIWAtxWTeAuMavg68BVxgju4XWFr9U6zlma1s6JPj7Jk7R9jGa5sVq870Glf2lSrVNXmqrKYOJzevJ2wsLRJkewIjuym5I4miYKRYFui1cMnMfI86i0%2bzC816/KpN%2bxb2mZ%2bPeclsMOCYwt28V%2br%2bKlgo3NQOq94Pcn4XeA/J2WFY6R4ILbkb3Fc5TnAf4qXRBqbHBN1W3ta6wpkdAg9w0I7MckpHWyhR0UvRxEipxjV%2b1Ja2YzHFWrb/5rNs/cWO8NCQ9aX5uQP5GZqNORnphzM1aQNpqakD4Jg1SMKkPQGNRjPGClSW5oWa5LSeOXr/MtX/5SWpDoZqLS7GrrP6V80Z699nNRqF2qyg8CjS0RkkvQhFWQsyvxwQn50knK2tvAVnT4T6BSVWo%2b3k47KenULmHzwEbaI%2b/%2bKp1hYW8Fxh5XAhuyKusk0p1%2btKigZ1lVWbKvSVHZXV1VV19Q0hzc1LfBcvXpwNYuJKZEizx%2bQldvZ2uRlqTadDa2COxe30Wqsb6XqrjzTtlu%2bmDFndztQrEx0aqQ/JCy0Ryv9PqjciJpjSLNrD%2bC8KqWmGxRZkW1W/IrOWZ2dBZOJ/omhhsBIFmZQhE5ttpBCqzEyUOZSlebDmA9Xsoli3IDa1RldetqO0rLwGQm4CFgOdQDvqinSY52KqJXhBw/r6%2bkao38lRnZqo7rN/IqDB4o%2bZ9dYfaTKtfpdZY/2HrHIbsaTCpMplUBZSeT2yFfiaLOIG8ARtqGwA7lA63TERBxgEtiZTOiLL1OaSG4jU6BxN9BTCAxJVGilau4sWrRhuzW2uTAjQudiYbrMoaq9kR%2b/GRMXG1el0FYMQuA7YD2wFtnMllJaWJiNc6Q3VJG/NgcQkcrS0sixPS07ttgqevcHik8wcy%2bNR%2bar9Ictm/MSrS5np%2bIJgZ/I6VYfcejfzdgaR9C5Z%2bvwl8B7tJdrLZHaZLBVmtPHxBu3tcX44B/yZl/zyqCE8UNyCBF/nrn/b2dD9fGtue782Nvf9nqKYoaP7cgue6KhMVac0Ixz1Q%2bA24GB5eXkfIsoaZJvFIKqCqKio5VQzMCQ1PFVVUHdKD2I7ZmNjs0tyQ2MQsSAlQ9dJ8OeoUPot8Dta9SiaEzf3e%2bS%2bAeN2j2qoLpm8/0em8zmwn6qvT2V5veJoUwZrSAkcTWXOryzUv95d3r%2b6JCkdidKxyCC/TSVxgcsygt3XhQX4Ful0%2bi0wd77yXVjpLuQTG5OTk9cgzd6I0JVlUADvQgvCqGnNQeV2tbCwsN/by/vnttY2d0xNTX%2bD7%2b/SgvwLbayeJYX8gipQB6pCr42Tj7sm7%2b7WPqohY7CGQFr1g8DHMk0qdlalsPf6q6UPt3Y1mL62VrvkypqSFT8bWDo/ICh4MD0jc6M6NW1HcFDQG6jJ90HoToS3nrS0tDYI3Q3GH8B3PUhedtFGJm/Fj%2bYFmzdvHsmDTUy2eXp5XUa0OIFi7AIY/pdg97eAN5G2c0XcJgvlu8f/TIooot3nl2VRLpO4YJls%2b25K9bgRkcdlIkRJAfPtrdiFzmLpwwvtBcorXaURl1aX5ItnV/OVDJw507ZLrVY3IBG5DJZ/H6tYB%2bHbITwvpvpSUlJ6kZN3QIiNhjpECv20HwHBFWQR8biuqaCgYBXu3494vwlh7QQUcMrMzOxZyiH43E5Rx8iQZh8gF8mi31bLSuhpDRVlha8RyYzwH528urZUOl7tKjWCFcwbbiuQ6nwvTw97CDuIld4Hc9%2bGLO0AkpOt2dnZe2EJe0JCQnrJteZOYo6jnSVra%2buC5ubmfPBIY01NTQFcaSWKtKtQXp7MXXeRXxt2gzvIMo5Q/8F4ohR4qoMT4kdUy4%2bSoEH4V7u0E90zF1xQuHTp0uqKioosTD4XxKeuq6uL1ul00VjhVvrfwIRVoawgUoIY03FPJQTfiKixBUo4hGLslsxyJhpNZAWu37UdrySWvUmt7dEHvbpWO2oF/BxWwFxn2RgalNyWa2EFq5DstGHyy4F6FFbZs2bNWiKb2KR5OQQ3aKEK/l8LBa6FIvpzcnKuIcXd%2b5AdKUP5nDuua/St/w/Ak4j/od7emPFACVq5JRgmYQE/7UlISMDc9RpUk/ro6OgmQwgyMjj8ZP%2bgMDZW0HVlCI3xLi4uXYgYO93d3c/jczV1dxQg0oluv0z9x%2b9lHyGeNKqfhikZhAtGZfYifDgAqx8PAisfyZRHhZzwZljJaMMHAq9saGhIBhEuLikpWZ%2bent4DYn2X2mVjoodM4Pdl/z/48XehsSqG1dMiGpyB6S6tr6/XYuIbqDHKE51JLcCQDCEKdMDfn0cE6AOZNuJZW4OCgt6yt7fvMnDIg7RhzHhWVmV%2bZwUY8v4pkQgqMcN1TihNj2H1%2bkFcca2trT44lri6up6iLg9X0ITPhHJGjQFW04R7noYlnPD09NyPEKieIrEZsb/HmDvXENlYaXBw8Ams3jWEw5OJiYk7kf0N%2bfv7/xS/tYEfvvU/Rai/JzzEAh6LwfNuP4S8QCglAJaxkDpJbpSUmDyEAEdXGKsvGBqanZ2dgoeHh0IWKb7TBP8fyfpVob4AYEwAAAAASUVORK5CYII=' /%3e%3c/svg%3e"}},"q+lY":function(t,a){t.exports={type:"image",mimeType:"image/png",src:"/assets/static/state-channels-clickCounter.b9b0341.54a512a70aa1c39cb702b6ddb8f35a21.png",size:{width:306,height:299},sizes:"(max-width: 306px) 100vw, 306px",srcset:["/assets/static/state-channels-clickCounter.b9b0341.54a512a70aa1c39cb702b6ddb8f35a21.png 306w"],dataUri:"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 306 299' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-0a431e9a1be6e1d17e58523a225382db'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-0a431e9a1be6e1d17e58523a225382db)' width='306' height='299' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAA/CAYAAABQHc7KAAAACXBIWXMAAAsSAAALEgHS3X78AAAdBklEQVRo3rXbC9ilY9UH8DkQxXTQSQenmlQqJJRKyLEmSSFRmkhyKEIadCBnSUrOp6QUSlSoRKmoQSincZwxhjEf0zTDGPPuvZ/n%2b/9uz/1eL%2bnTV3qv67n2fvd%2bDvf6r//6r3Wv%2b96jRv17f6NzjO2OMd3//9ff1jmuzXFnjrNybDDyy7ZtV7366quP/slPfnL%2b97///T%2bdeuqpU4455pg7jzzyyGsPOuigXxx44IHH5nXnb33rW2/LuUuOvPbrX//62OnTp5f355xzzqhrr7121H/zrxr%2bVH/jciw/ZsyYVXOslffr51g3xz5szNEfPXp0272/N8cJOdbJsevGG288e9ttt2233nrr9mMf%2b1j7gQ98oN1ss83aD37wg%2b1WW23VfuQjH2k333zz8t3uu%2b8%2b/bOf/exZO%2b6444SAMaY%2b/Nvf/vbwuK666qr/ivEjDX9Fjq1yHAD4HDfEuIdGGFiOAHF/Prsjrwu7zwbdMa2es9xyy516xhlnzDjllFPaH//4x72f//zngx/96EeDsGFw3nnnDfJZ/8ILLxz62c9%2b1jv55JObr371q%2b1ee%2b3VfuITn2gPPvjgm/L99nVQb3rTm8Y%2b8MAD5f0RRxzxjHq9Ir1CjpNy3JXjEQZ0Rj%2baY0qOy57znOecN27cODQ/N8c3c1yco1lkkUXmvf71r2%2bWXHLJoc54oDyc/x86%2buijF1x%2b%2beVtjG/OP//8NoA0MbYNKM2ZZ57Z/PCHP2xD7yZANBdddNHge9/7Xi9h0d9pp53az33uc%2b0Xv/jFa84%2b%2b%2by16oD33XffYWb8pyExMrY/1hnZz3FNjhM9CxNi3Bah7R6f%2bcxnzsigrvjoRz865f3vf//sUHrw%2bc9/fugd73jH0Kte9aq5q6%2b%2bumCdCoBcA7w5eT87r/N222239rvf/W4bDWh%2b%2bctftvF4G0OB0ca49qc//akDQM2ll15awIom9BMOPWwQJtttt92%2bdbC53yIJkfL%2bmmuu%2bY9ZcHqOWTn%2bJ8d%2br371q5%2bf1z1f9rKXXbrGGmvcmth85IADDmi/9rWvtRGrNvGIzu0f/vCH9ne/%2b10bOrff/OY32/32229GPHf4uuuuu3sA%2bEPYMivhISR6Ae3mG264YXD66ae3EcHCBNcFEExoMcI9L7vssjah0V5yySXN73//%2bwJSnt3bYYcd2gkTJrSrrbbaOTF88erACsK/w4RKo%2bM7r/997NixV4/4fucI1/xtttmmoJ%2bB9//0pz/1brrppr74zf8NCp977rk82oTigyh2%2b%2bUvf5lHbznppJMOWWqppW55zWteM/TsZz/7sQAz99e//vUg2aANzRtex4Jc797Dx1lnndVeeeWV7QUXXNBGK5o//vGPQqNNxmgikL3111%2b/xbQAv89/AkI1Xlz14yWev7l%2b%2bYtf/GKVo446aod4%2bn4enzhx4mDttddu11prrWb77bdvMpgy0AywxHOoXT06SHrrhwntIYcc0h566KGPfuELX5j/ile8AjvaK664AjgN1qA5j8fLTYxtTjzxRJ73fkAXAlSDBRgSpnnf5t5NBLK34YYblkwyefLkScZ7%2bOGHFwHPGP5lEKrin9yp9uS3vvWtq91zzz0T/5y/GNbPTRnQBogG9b3feeedWx4IDdvQvN17773bTsDaH/zgB424Fcuh7WCfffYZ7Lnnnq309%2bIXv7iJkGFJMZ5n0RwLAkJz3XXXCaUBjfjtb3/b3nrrre0tt9zS3n333W0MAnYT8Jo4psWyCGP/3e9%2b9wA7Z86cuVWXGhd5Wj1YZ511ht/HmwTweoIVcfvZtGnTbrrttttagyFSoWvPQw04g2p%2b85vftJQcNQ0igoQR7UYbbST%2bhULLc7/61a8YSrmbT37yk02AbaIFYrwJSMVgRl188cXOL%2bBhzo033tjmmBd9OD%2bid3M047Fddtml%2bc53vtNcf/31BeiMoRE2Cac24tj3/DxnKCGwCpv%2b%2bte/jv2noZBBPu76sWOL8i%2b%2b%2bOIvycvfXvrSlxajCU48MHTaaaf1DdaB3lQbvcUh43kBlb0mvbUf/vCH27e97W3FYJSm6scff3zzqU99SmEjLTZvfOMbAVrYEQOL0QGqhAHvOh/Axx133CkZ03UBjeAtlGXcO/eZHw8/DGQguB778oze29/%2bdmDeFRCey66ExZinBOF973tffVuo8qxnPWurxH773ve%2bt0%2bceC0Xt2KPUBEiisxT6AoE6IfmJXaBga4GE6o3vJHUNAiAA2krgyveVyOEYQAsccxoih9jyz0AQ/zCgr%2b9/OUvv4rgJuQGqQSLbiQEVZD9SZMm3Rot6Asb1%2bR6othGD4b22GOPdurUqReyKyweXcNgOBxy0/K60korFXSSw8cvscQScxdbbDEeHOSGbRT%2bkQxucgbaY2AG1FRvA8fAiR7aGrgw4RFGBZjmS1/6ksE0oe4gA2uiEYqjJsVRCSH0D50NvqRPRh977LHuX/QggD8aEO8kbhgRo0oIBcyFMkvAnJznTxEKccZAzYB1gIomDYUh7c033zypM/wf9SAPHzWipLxSHR569iJWxePx3KPxzAKDrCmOp/I5gStMCEiFGbzgPMAIDfkcCGJTSKy88sq9CB9xbVO1lftHS0rqEwKABCDREwKU32cB9JJcc0lYWdLepz/9aSCUQuh5z3velRnDpcaSsOwrmIwPUNG2hh133XUXsNftQuCJc5p4e5Hu7Y7UOelp6LnPfW77jW98A/UbdCY2OYoqEyqewgIDl6YULMnhbQqa4klexAzpCmuoO29l8oP6g4Ch9i8iyUO5Z4lfz3S%2beyigcg8eBebfE8tL59pLwyRzgn7G2agioyMPxqN/dx0HYYKU6nnOTXbqE9I8477UDkt1IIweNX78%2bJEl7xKvfe1rp6Ft8vkgN5XTG%2blG7PMSr6KsAQMiylpeMSDFTYldNQA2dCmqhAFgGMvjidkmFSQD5tx5551DQkWajAFtBldCx71cl1d1BCf0aU48e1rYM4PXA3qTOqRRha6yyioDwskpQgTYrku6nh2Aeu9617uE51BSuXv9/AkhkNK2en%2b/DJCBQ4mdxkWEhqh0k5NCbUqO%2boyrYsfr6K809blz6ueucZ464CUveUm79NJLN0lTbTTHIBcCkKFSmoFLrf7PvcpnMo1iKLV/qTXe8IY3FOMVUwFgYMqccJ22wgorzKFJwJRyhV7A6GU%2bgm1SY3P77bcPcVqM36xYnHgqwpdqbHxEZg70482%2bWVY%2bm7Lppps%2bzLseyAgHI8UqkXIAA3WxAzO6Wr3U8WIZG8Sm2Zu4p8pJkY1Y3mCDDUq1J4xOOOGExn27WV8BUhgB8itf%2bUqbFL0ghs5fdtll20ywmhe%2b8IWNNJ05ST9OfDgTrhKqCirzkYQnIMr0OVmiiS2FrQqpALDByI7MopttttlfeDuo9aS0UHkotcD8HCUuUwCWuBLTqM3b4p9h2IGyXp3LaKLFkwwQv86NAZocihU1REuYEgpFHBntHjzuGvMHPQC0jQ4sAF4YsyBzh0diaBuDm6h78853vrONYbJLScXmHsbnPh34pQIVGjlnQc6ZEwAO6WqCx0M/ovOu1AFipI8%2bPJfX/iabbDJA2RVXXLHh6VqhMUis/uUvfymfKVKAEw%2b2aCpUeM9ngCJMChIlcidSFL4UOFtuuWXp/CiPzQIBimGUP4Oel/P%2blv/vl%2b%2bV2woc3uSsCGCb9NocfPDBJe6BhvaEGpOxBu2T1gdhDNbMSHm8cXV80zSjav7fRzGiI8N4KkpAxFMo2nQNjMaExyAYwIMQpqwRsjaxhVbFQLRzvfOAwztJU0ULUN0ziCVj999//yZ1ewEvgA3ioT4xc290BTYQpTWqLhSFh4kRYzGLRqG7SViMbdZbbz0MaV/0ohe1z3/%2b80vYJZwH48aNky3mRNtWYvfrXve6xxmQL88XxzEK5VCx4ekIGBEavOc972mFAhDcLNNXN2wVMebgEZlSkQkBwEhjmZmp/NpUb21itXxOG5xj4J6Xo3jcoCNudzFaqk24DTDL8zO9blK9lfHwsFTZTYexsmQAxY5JWMQVW4vhL3jBC9pMtz27yXibV77ylb4fSrZQNO3K7re85S2lFhgXatyrjI1XBuKQB00xeQoLQvUBo4jIMsss84S%2b35MPnR7oOzrkSy6PUSW9EdGaGhkgPjEnXn9ztGiNGHgjEOJ9aa3ojmdT%2bhQ0RTRlAaEJ3DimrU7RnmO0V2W8z%2blON47GWJLm2zBgjQ6AkgDWSkVVREj97Mj7AUAygNuiqlehs2Zl15crnkyZ2dINhiqYHMnPbWhVBqqriwFEkdFAVdjUTOI%2bwkEjxRwj9f0xGcsmMezPagR5narzqvsCNuV5qzzn5WSD1veMwsxFF110OFSdCwBAuCbzmibX9JMtAHdQ7XkEgPJmF9PXxFiP8ShKpQEQCt4bQbtCaqKqaIcRYtAhvlGT4rvusMMO054q4sPb5uydMhcAvNa4BSrQCaZGBp2oRiZuG8Amr5fwQWcaIoYdvG0eAYR8Vw33XQEs15VZpuvRP2A0%2ba7vPnVNItc/XgrHc9/qVH%2bIMBmoQRIW%2bVusJizM4opyEznC5Dzh4nOiJSPwaletlfqg5vCuLC3nY4Trsch0WtbhgJw/lPw%2bFF0ZGKiB5/9i0JPb7bUbzesYEdY1mb808WjJWDwt1n1GBLEhAPRoQ679aHH/mDFjCwNCoYvEoxSoeDBQiqug0ZtLWit1gKqsSzHFqNqvY5QYZxDPmhMoebEGAMAFQP3fq8%2bcQwTdN/WA9NkkPhuhxCDFDk9rlhCyvBZjiZlXXl1%2b%2beVLNymhsDAF0WM1BByYoW8Qypf/c27PtXm/R9f3eJwByy233FVobZ4uBLoOTPG%2btNN9VtSaMDIa3QHF80BBY%2byRv53nHPdxnnOkP5QHVn3FEqHjfLlaiy2TJFRviJsKj%2bBm0I2wcMSDBaBO%2bBosEC4jFlkaGQk4Ob9Zc801i/gJl4DZE0a55rAnAJATLgvdF/IMY3mLSOkAdfRXmanRy4B53veYgPbqAFrA83K5a%2bgDALqytugEllF/oDgPEMLJTJFumLtH6cVr8Xin3k1NZd4DJDXDsMEBjYPKeVtssUWjRlEGf%2bhDHyrfC4cIYBXDAoBVtBoCBYBQ6JLE7Rx5GgBdFVZimVEGyihepuKoKwQUKV55WF4GTKqxwoRaLdZJkTkCjwsRxsv3vgOS69QM6vWPf/zjReykKspPyMSwV0Zizrx58zQ6irfdj44k3gGgHmjyeekvCgEiKHSEUj7vpYwmnud22jcm4TFqVE68KAOczdAYMKgFCy96YC1efK/8rToAJJ93GaKcTxjpCFoLK2D6rLbKGO5/AwdcLZeBYnZoJkqoDFwYiH9iWJVfSBJI1%2bk6G5%2b2vPKYcXqQKara2bNnlxQNvFonBNie2iH6cRkA8pzHW/%2bhxvfjsXldU6OkJSLFUA/wyquMEBY8i84GTdRq9wdQ1RjMwQ4hU3UBo9zLK42gMQzBLvfBAG0zhlNxR6hL4Ar1Kb5UrGYhnoyymqwlX8tdlSmAam0CFEdXo/TVKGHTZHZnDItkbKPlw6MMUOvZdDRGlFQHhJEAGLhYBxCqGzSDAYPKgAACRmCB68wcgeN7RnsvXLzHJte7t%2b%2bt%2bpqP6BBLZ9KfPK/QIWQM1A/UG8CQJ6dF2uGoAAKD6gullVde2ed99wuQU57cEd%2bFQTq/ZlQGAwCeQXGx63txzSAeZggqdyu6xdPVUJ8zyv8Y43/A1ImQ%2b/A8hmATsHxnLsG7vEQAGcPraoGu/O7VuYhXxsgMsgWwxo8f36666qrFeEY7j4BiRO5TUuvqq6/u/DkJ572mTJmyRcJ2CQBM0DcLJQdysSYko%2buCZM31jKuDxxia4DxiiObOxRrvgeSgA673GW%2b7Xlao77EKWK4FBB1Q5xMy8S%2bVETEAJIb7UiTDgMLTPIshlF6sM94rQBhO/f0PCOdYhxA2njtt2jRtvj%2bXjljK0Ee0rmhAna3xXDdvb7tOcBl4t4Rdl60KADTB5wSUsTSAYUSP4AkL98MgIYMRngEg4FawdYr0DQgh0ePhbi5Qih6xTBd4G0BCwbnYIHuIfd52jd6Dw6qx0NUYkSnUCAG7nzK9x%2bbSEM5Db2ZIBjEAQteCHk6BtXgxUEc3lS0McBOMYGAFoDZHeVsY1P8ZX9cLHL4DTq0SCaHiBQsYF7rydFH%2bhEVJhTwvxfGseYKKEROAxWATJRqiaarEVsfQlkzO9Dib2FrqDR2izFD7RQRCnbMZkzTUV%2b/Xmr8a5WB4rQsYibJSX%2b37C43q6TpPAKSpLrCc3y1dFcC6ynK4wYplqjjpzWyS0ehdPWyi5JWB9AEjeBtQYpvaa4/xuP6A9%2buvv35j6WyjjTZqNt9888HEiRNb64lbbrllWYhVyFUh3NWcO1rQ1xCpOzMYXbs7te9vsKjLWEbL5%2bb6FRierLNDVFczOK8rlUvHV99O%2bwt4NKeCLJ/rOSiEKDjj0blOt%2bXxlVZaqYikyU4nbqrDsuCy/fbbl70KGjj%2bJ6o77bRTYYD2WSrFputrlAXVOGd%2bBeAtuXhuvNSYmipPDbjSHhsAwGivBKzrFJf4J5B10uN8se47zNCC9n3X8iorQIBxnsIGaBU4nWhxSs1NZMS6iY8mKGOlSHQnkpiiba%2bfqIJ0WJG26MpYLfMY23Sd6YVxyu21/b7tttv27r//fqn4wgrAEom7K%2bLd%2bTKCQQKAEVJgbYV7X2nOkzVlUtWukizel%2bu9Bw6adX3GMsvEngAx3HytjVAhoOdvZul485vfXJbXGaq6M1HSFeLZjsolZOrWnNqRxkglOwdlntKYq9x00029fDeL16MNeoe9e%2b%2b91zi3HhVRqbtBjorRC6CnUeFm6F5nedScUUCpuz9q757xYtx5enkA0Q8wGBrgGt63YNn1B8oCSFc5FiA8CwPcQzrkQYb5bNdddy1VIlHzPTFVg6gm3Z8Qa77QF8Z3DZfCtLCx7ElwjaXz6IJus9CcEWeMG94Os8EGGxwLzaDf23///YuBhLHO8mrrGwi1QqzdICB4b5GTxzGGF10DDO9HdJHKwLo027i3CY1XHmW0VvnUqVMLmHWfAEN5U0gx2CGLGIfvKvCejWkYCmiGsyPPHag2Eya9WbNmWcA58vGdTjvvPKbbP3MZetn%2bQjjoAZEyUN6su74Y7wCMm1ejHQblwWqE2hNAbezgsY4BZaub%2b3fpryyEAEljhBO0x6zeCA2NGff2HCm026NQxFUVWh0h7JyrVFZh8jpm5f0jGcv9nLHeeusNABQQF8aWFQsAoVGZFz/44IOflD5C%2bV4GUdbza3HDO2LMg7vu8XCxw0BAGZwHE7daHjPMdVhTvdPNBZpu/18JNQxAb8xTC9gSaynb%2bRhAvHgZc%2bqiKwAYD2jOkYncWx0D7IBXltTzjOkZ4/RJkyYBdmjmzJnE76xucXTsqFw4cuPx7wiMxYnk06bO%2bHicEfVBPMxQ32OH7xgKlNpTFC6MdG1dJnd9Htp02eKhxH1PvJrlWd1BUWHAEQDgWWBiAO3gUU4AgNdaoLl3zrGNpunmGU03j5mZrPaozBBRbeiDtYYwZeUOgMf1Lzcrq8Opj/dGvwx86MADD2ySl8tgGVUzAo9Rd5/XNUAGVpbwkgcBATgG5D1DeNQao/vl/IcDwEIhgwGaHJbi7U3YbbfdbGZoOlaVxRH6AVAO4H3MqOkXKxiGgdr3WJp7T88zzsZkLfb99tuveD/Gnzbs/bpZKDctSMybN29dN0zZWBYlklttgWuqgbULXKe2QCBEvMNAzOg6SwUUil23vTq32/5SmIVBMWBgWkwHGC5vywAJgwIAI2UkANS9SF0BM7wPCbi8X%2b9jc7XnhR3nJZRv0B5LvWADp%2bsejrOXHd4cUQFIOhiV6WEB4Z577jlHBXX44YcPMQYIdbXIwOv0ljEGWGleJ02YAiAeMziiBRiChroGXZuvtMPuE2DI61pjtr2oRYSA9T5elc%2b9drm9UN69AezVZ7bXVdDz/sY47gILM6bBef7Q9OnTxf6%2bI/cIPWGnWJApADzwwAPLxqPz1OMxcIBC6ucqaJ3nipFAYJRXqItnmcL/1WDvhY5Bi1uVGBAtiVnr4zlLZOLeVhkadNhhhz0aAGYCOEYPZBehRNwwgAM8z5iIqzWMjGfQVaOnJ7tcHEGdax6QGqJnV0jC5Ob8DRv%2bhA1SFYmcUOJizpw526H6hAkT%2brbGYITNRqiNynX/bl0GrwWPKq8qcxWrDrAy8bCiq%2bcgLLTehQ/AjjjiiDKJ0epSy%2becWXPnzt0%2bnnzMPVWmmOUZQJbXpVJhgCWKqi5E5gbYkyKmAyWynWjWGDEk49loZOz/wz5BiMQ4QliYkFr5OJOTIFi2mCkh875sU/EwRtZYl8/rLhH5VrHC%2bK5vUDZVWW6rACZdlfUFoDBI9Sn281lfuRuWXNO27fiAeyuP0wpA190nlugs2gDAZEo3S5jlvvYil53jOsUBeajz/ikjjX/K7bIVkSA1/BuB6MKvVGWh5EKG0YMUTo01QF5H49pKN9NT12OAwdEGuoCi6v6uJ0D1H%2boaJSUtCSuzNaGGIer%2b3HdOtGGhe9k%2bA2Qiy/NdjVHm89rf7gXUfHZfnvOAuJfywqq%2brk%2bMn5oQWnKk8P3TDdP1i9TVY7qtM4tlIJPt5UmclgFts802jRoBO%2bpEqNsRXhuidatLOewntMegY8oPknGuJ35WoLuF0TJtpRPON3dX13c7y5quhVaqOsLqmd3SXNNtmX8s4XF7wDgqLJpnhpj5wyDOKyzMsfbIfYFPu1u80uPuu%2b8e24EwLg%2b82pw79B8yGEIFBFvjg3TTzRJVXkXglKMGT7nRtesJDoXyU3kMU1CaUWoFJbBz1R3E8I477ii/M6h1PIDVG8LFeQoeIec3RXmdnOffEuMf1jVOCh1Ey3oAiC17PFn1nxaAkSfNmDGjgrBYQLjcYsNBBx1k01Jj7m3OEDAAgcaKjYENTxoPdoHp9Krw8nkprXlQqDCcMDLe95jAMF2c2kZDa4wDALB8VjtKMgkAwhI/qurZL2RrfO7F%2bCHbdRLKx9Vqr6r%2bv/yDiZEgRAwrCOYN59nfH5raoTlQYmKB3M1z%2bnDEUnNCPe8AkB1eNkzbgYIRDBIqprnUnRZglettySdoFQDvZRTUF/91gqVQA4LVJM%2bwETsA98wiE7VnjbBl9L/1k5mRuTK1wfCvsELPo9Xr9ukl1w5MYIijwyovRedxxYzFSstV9acuBE/MYwNwlL886xp7fGSFbqm%2b1BF1XREQWllmjBiT5xfQMU96zvk9GSJjA9bJ/7HxT8WEkSA89NBDexic3Vjxbp8XkxlKvYARPGtWxzt1O5uWd/cbgdK3k/a6Iqv8qAKowHKNgx4oj73aFZ6QK4dt9naWdRmA4T271KTLGL/nM2b8U4GQtDI6MTmmmz5PNAmRdjbccMOFmW72QlfVWNmuZuAAQWv0tnILFKKp8coAvwYNU0pIRLnLHmIAZULmVbbpB6BemNKLAPeiAX6l0oux/cR62ZqnbxDDrwztV%2b9i3u8Bnhnjnyo7pHT1o4OiC6mwNg3tHpOTpUVb5jQcw4ZeGNKn0mZzXcqy8tzTj1Ps2LKy5ppr9mxkDiMUQL0IaS8UH4oolt8kEDyTGNSW08U3o30Wox/J8cscW44Y49g6zv/Kb4jrTROTjC8gpMZfNd44LGJ5QoCYRaB4miqbiWlzA0ZBhfqm21tsscV8qQ/l67YcxvImQ02EUk02KWBuSRV5dIw6JB7%2bRo6vxeDP5/8JGcuyT2LpmH851T0TIHRV4xN%2bdJCy84UJjY/cd999p6WYuR4gAWh%2bYvXvMfDOGHXhggULdkhGWWb27Nm7xqOnpN44Lx7%2baQC9IPc%2bM0YemtCamGtXDlvGPs1YRitwRv4E5v9r/P8CsEst2LpvQBAAAAAASUVORK5CYII=' /%3e%3c/svg%3e"}}}]);